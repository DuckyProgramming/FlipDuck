class partisan extends physical{
	constructor(layer,x,y,type,width,height,life){
		super(layer,x,y,type,width,height)
		this.life=life
		this.trigger={physics:{resistance:true,gravity:true}}
		this.offset={position:{x:0,y:0},life:{x:0,y:0}}
		this.movement={speed:1,gravity:1}
        this.goal={movement:{gravity:this.movement.gravity}}
        this.timers=[0,0]
		this.squish=[false,false,false,false]
		this.base={life:this.life}
		this.collect={life:this.life}
		this.size=1
		this.dead=false
	}
	display(){
		this.layer.translate(this.position.x+this.offset.position.x,this.position.y+this.offset.position.y)
		this.layer.fill(255)
		this.layer.noStroke()
        this.layer.rect(0,-this.offset.position.y,this.width,this.height)
		this.layer.translate(-this.position.x-this.offset.position.x,-this.position.y-this.offset.position.y)
	}
	update(){
		super.update()
		this.position.x=constrain(this.position.x,0,game.edge.x)
		this.position.y=constrain(this.position.y,0,game.edge.y)
		if(game.level==2&&this.position.y>game.edge.y){
			this.dead=true
		}else{
			this.position.y=min(this.position.y,game.edge.y)
		}
        this.anim.rate+=this.velocity.x
		this.collect.life=this.collect.life*0.9+this.life*0.1
		if(this.dead){
			this.status=1
		}
		if(this.movement.gravity<this.goal.movement.gravity){
			this.movement.gravity=round(this.movement.gravity*5+1)/5
		}
		if(this.movement.gravity>this.goal.movement.gravity){
			this.movement.gravity=round(this.movement.gravity*5-1)/5
		}
		if(this.trigger.physics.resistance){
			this.velocity.x*=(1-physics.resistance)
			this.velocity.y*=(1-physics.resistance)
		}
		if(this.trigger.physics.gravity){
			this.velocity.y+=physics.gravity*this.goal.movement.gravity
		}
		if(this.squish[0]&&this.squish[1]||this.squish[2]&&this.squish[3]){
			this.dead=true
		}
		this.squish=[false,false,false,false]
		for(let a=0,la=this.timers.length;a<la;a++){
			if(this.timers[a]>0){
				this.timers[a]--
			}
		}
	}
}